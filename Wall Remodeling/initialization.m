%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                initialization                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

number_of_brownian=1; % number of brownian motion steps to increase surface contact.

% initial thickness of the ring in number of cells
lumen_radius_0 = 30; % Initial lumen radius
wall_thickness_0 = 20; % Initial wall thickness

% Initial position of the internal elastic lamina
IEL_0=3; % cells such that distance_to_lumen<IEL (respt. >=IEL) are in the intima (respt. in the media).  
IEL=IEL_0; % we will assume a circular elastic lamina.

% Graft radius
graft_radius=lumen_radius_0+wall_thickness_0;

% IEL radius
IEL_radius=lumen_radius_0+IEL_0;

% Initial distribution of SMC versus ECM
theta=0.25; % Theta in (0,1) p<theta ----> data from Minki SMC~25% ECM~75%
            
          
%% Probability laws driving SMC-ECM dynamic in basic solution generation

% Probability for an ECM to be degenerated by an SMC has to be proportional
% to the number of neighbors smc up to four. This is to maintain an uniform
% distribution between SMC and ECM.
% Apply xxx directly in ECM_dynamic according with fact that theta changes
% during he simulation!!!!!!!!
xxx=2.75; % calibrated (see xxx calibration folder)

% load control_parameter if run_series
probability_ECM(1)=A(2)/xxx; % probability of matrix degradation (should be less than 0.5!)
probability_SMC_ECM(1)=A(2); % *(2*(1-theta)^2); % probability that the SMC cell produces ECM; 
                                             % coefficient corresponding to equilibrium;

probability_SMC(1)=A(1); % below leads to apoptosis.
probability_SMC(2)=A(1); % above leads to cell division; assume equilibrium for base level, i.e
                         % probability of cell division-probability of cell
                         % apoptosis.
                         
tau_depth = A(8); % rate of decay for shear stress influence inside the wall, expressed in cell dimension.                         
                         
% Clock period for cell division and ECM deposition
T_cell_division = 12; % cell division cycle;
T_matrix_dynamic = 2; % balance SMC/ECM production/feeding (gives implictly motion timescale of SMC)


%% Mechanical Model: uniform cylinder with thick wall

% Hemodynamic data:
nu=0.01; % (=1/Reynolds)
U_max=0.3; %(m/s)

P_internal=95; % (mm of Hg) 
P_external=90; % (mm of Hg)

% Material properties:
Young=2000;
Poisson=0.49;

% Lame coefficient
lambda=Young*Poisson/((1+Poisson)*(1-2*Poisson));
mu=Young/(2*(1+Poisson));


%% Output 

% Initialization of the state matrices:
type_cell=zeros(Nx,Ny); % it defines if site contains SMC or ECM 
internal_clock=zeros(Nx,Ny); % it defines for each site the "cellular" time
lumen_hole=zeros(Nx,Ny); % it define if the site is inside or outside the lumen
external_support=zeros(Nx,Ny); % it defines if the site is inside or outside the whole graft
lamina=zeros(Nx,Ny); % it defines of the site is inside/outside/on the intima
new_vns=zeros(Nx,Ny);


% Construction of the hexagonal grid: matrix X and Y keep track of the
% specific position of the site(SMC or ECM) inside the grid
for j=1:Nx,
    for k=1:Ny,
        if mod(k,2)==0,
            X(j,k)=2*j; Y(j,k)=2*k;
        else
            X(j,k)=2*j+1; Y(j,k)=2*k;
        end
    end
end
X=0.5.*X; Y=0.5.*Y; % needed to get the right cell dimension;

% Dimensions of the box:
ax=min(min(X)); bx=max(max(X));
ay=min(min(Y)); by=max(max(Y));

% Center of the grid(~center of the lumen) --> coordinates (Cx;Cy)
Cx=(ax+bx)/2; 
Cy=(ay+by)/2;


%% Initialization of the CA grid:

% Initialization of LUMEN_HOLE and LAMINA
% lumen_hole = 1 if cell belongs to lumne, 0 otherwise
% matrix_lamina = -1 if cell belongs to intima, 1 if outside the intima, 0
% otherwise
for j=1:Nx,
    for k=1:Ny,
        
        % Get the distance of the current site from the center of the grid
        distance=sqrt((X(j,k)-Cx)^2+(Y(j,k)-Cy)^2);
        
        % If cell is inside the lumen...
        if distance<=lumen_radius_0,
            lumen_hole(j,k)=1;
        end
        
        % this array keeps the info on the site location outside
        % the Elastic Lamina or indise it. It is used to recognize
        % the media from the intima, later on in the code
        
        % If the cell is inside intima
        if distance<IEL_radius,
            lamina(j,k)=-1;
        end
        
        % If the cell is outside intima
        if distance>IEL_radius,
            lamina(j,k)=1;
        end
        
        % If the cell is on the IEL
        if round(distance-IEL_radius)==0, 
            lamina(j,k)=0;                
        end
        
    end
end


% Initialize the SMC/ECM distribution if we are inside the graft (but outside the lumen hole)
% ,otherwise set the external support matrix
for j=1:Nx,
    for k=1:Ny,
        if lumen_hole(j,k)==0, % if we are outside the lumen...
            
            
            % get the distance from current site to the lumne border
            distance=Nx+Ny;
            for j1=1:Nx,
                for k1=1:Ny,
                    if lumen_hole(j1,k1)==1,
                        distance=min(distance,sqrt((X(j,k)-X(j1,k1))^2+(Y(j,k)-Y(j1,k1))^2));
                    end
                end
            end
            
            % If we are outside the graft, we simply set the external
            % support matrix, which is 1 outside the graft, and 0 inside
            if distance>wall_thickness_0, % outside the intima/media system
                external_support(j,k)=1;
                lamina(j,k)=1;
            
            else
                
                % Usage of rand ensures the stochastic nature of the
                % simulation
                test=rand(1);
                if test<theta,
                    
                    % we seed an SMC cell.
                    type_cell(j,k)=1;
                    % update the clock
                    internal_clock(j,k)=round(rand(1)*T_cell_division); % valid for SMC only
                    
                else
                    
                    % we seed an ECM cell.
                    type_cell(j,k)=2;
                    internal_clock(j,k)=-round(Nx*Ny*rand(1)); %Initialize the internal clock for ECM dynamic to be negative to distinguish it from SMC dynamic                                                   
                end
            end
        else
            lamina(j,k)=-1; % initialized this array inside the lumen hole.
        end
    end
end

% Initialize a matrix that keeps track if we are inside or outside the
% intima
IEL_radius=lumen_radius_0+IEL_0;
for j=1:Nx,
    for k=1:Ny,
        distance=sqrt((X(j,k)-Cx)^2+(Y(j,k)-Cy)^2); 
        if distance<=IEL_radius,
            CA_IEL(j,k)=-1;
        else
            CA_IEL(j,k)=1;
        end
    end
end

%% Initialization of vectors for cell motion:

% if k is odd:
directionx(1,1)=0; directiony(1)=1; % north-west
directionx(2,1)=1; directiony(2)=1; % north-east
directionx(3,1)=1; directiony(3)=0; % east
directionx(4,1)=1; directiony(4)=-1; % south-east
directionx(5,1)=0; directiony(5)=-1; % south-west
directionx(6,1)=-1; directiony(6)=0; % west

% if k is even:
directionx(1,2)=-1; directiony(1)=1; % north-west
directionx(2,2)=0; directiony(2)=1; % north-east
directionx(3,2)=1; directiony(3)=0; % east
directionx(4,2)=0; directiony(4)=-1; % south-east
directionx(5,2)=-1; directiony(5)=-1; % south-west
directionx(6,2)=-1; directiony(6)=0; % west

%% Compute the simplified mechanical model (thick uniform cilinder)
analytical_model_of_meca


