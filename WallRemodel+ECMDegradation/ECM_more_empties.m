% ECM_more_empties: the code scans the surrounding of current site (j,k)
% looking for empty neighbors. If it finds at least one, it will place the
% ECM generated by SMC in it.

if mod(k,2)==0,
    j_k=2;
else
    j_k=1;
end

% liste --> virtual neighbors of (j,k) vector
liste=zeros(6,1);
for n=1:6,
    
    % (j3,k3) --> temporary coordinates of the neighbor
    j3=j+directionx(n,j_k);
    k3=k+directiony(n);
    
    % if (j3,k3) is empty --> liste(j3,k3) = 1
    % otherwise leave 0.
    % Again liste has a 1 if the corresponding neighbor is empty, otherwise
    % it has a 0
    if type_cell(j3,k3)==0 && lumen_hole(j3,k3)+external_support(j3,k3)~=0,
        liste(n)=1;
    end
end

% Select randomly an empty neighbor if it exists
nvide=sum(liste); % nvide = #empty neighbors of (j,k)

clear newliste
cell_at_wall=0; % initialize the flag counter for empty spaces around (j,k)

if nvide > 0, % if there is at least one empty neighbor...
    
    cell_at_wall=1; % update the flag counter
    
    n1=1;
    for n=1:6,
        if liste(n)~=0,
            
            % newliste contains ONLY the index of neighbors that are
            % empties!!!!
            % if liste --> |1|1|1|0|0|0|
            % newliste --> |1|2|3|
            newliste(n1)=n;
            n1=n1+1; % just update the index for newliste
        end
    end
    
    n_empty_site=n1-1; % n_empty = #total number of empty sites
    
    % choose a random empty neighbor's index
    n2=ceil(n_empty_site*rand(1));
    n=newliste(n2); % index of the neighbor chosen
    
    % (j3,k3) --> coordinates of the random empty neighbor CHOSEN
    j3=j+directionx(n,j_k);
    k3=k+directiony(n);
    
    
    % Checkpoints: the neighbor MUST be empty and the current site has to
    % be consistent in its lumen_hole and external_support matrices
    % If the neighbor chosen to place the cell in is not empty, display a
    % bug
    if type_cell(j3,k3)~=0 || lumen_hole(j3,k3)+external_support(j3,k3)==0,
        display('BUG in EMC_more_empties line 68: site not empty or it is but it is not part of lumen or ext support');
        pause;
    end
    
    
    %% Place the ECM piece in the selected neighbor
    if change_matrix(j,k)==1 && type_cell(j,k)==1, % just an additional checkpoint
        
        type_cell(j3,k3)=2; % Place ECM in (j3,k3)
        internal_clock(j3,k3)=0; % % Reset the internal clock
        change_matrix(j3,k3)=0; % reset the change_matrix tracker
        
        % Update state matrices of lumen and ext support
        if lamina(j3,k3)<=0, % if (j3,k3) belongs to intima...
            lumen_hole(j3,k3) = 0; % lumen_hole has to be 0
        end
        if lamina(j3,k3)>0,% if we are in media though...
            external_support(j3,k3) = 0; % the external support has to be 0
        end
        
        % Only need to update the change_matrix tracker for (j,k)
        change_matrix(j,k)=0; % reset the change matrix
        internal_clock(j,k)=0; % reset the internal clock too 
        
    end
    
    
    %% Degradate the ECM present in (j,k)
    if change_matrix(j,k)==-1 && type_cell(j,k)==2,
        
        % update the state matrices of
        type_cell(j,k)=0; % remove the ECM from (j,k)
        internal_clock(j,k)=0; % reset the internal clock
        change_matrix(j,k)=0; % reset the change_matrix
        
        % ... and update lumen_hole and external_support accordingly
        if lamina(j,k)<=0,
            lumen_hole(j,k) = 1;
        end
        if lamina(j,k)>0,
            external_support(j,k) = 1;
        end
    end
    
end % end of the function


